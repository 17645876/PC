//ave
kernel void add(global const int* A, global int* C) {
	int id = get_global_id(0);
	int N = get_global_size(0);
	int sum = 0;
	//int ave = 0;
	for (int i = 1; i < N; i++)
	{
		sum = sum + A[i];
	}
	C[0] = sum;
}

//
kernel void avg_filter(global const int* A, global int* B) {
	int id = get_global_id(0);
	B[id] = (A[id - 1] + A[id] + A[id + 1])/3;
}

//
kernel void add2D(global const int* A, global const int* B, global int* C) {
	int x = get_global_id(0);
	int y = get_global_id(1);
	int width = get_global_size(0);
	int height = get_global_size(1);
	int id = x + y*width;

	printf("id = %d x = %d y = %d w = %d h = %d\n", id, x, y, width, height);

	C[id]= A[id]+ B[id];
}
//
